// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@function modify-background($theme, $background-color) {
    // Replace the background in the color object's background palette.
    $theme-color: map-get($theme, color);
    $color-background-palette: map-get($theme-color, background);
    $color-background-palette: map-merge(
        $color-background-palette,
        (
            background: $background-color,
        )
    );
    $color-background-palette: map-merge(
        $color-background-palette,
        (
            raised-button: $background-color,
        )
    );

    // Replace the background in the background palette.
    $background-palette: map-get($theme, background);
    $background-palette: map-merge(
        $background-palette,
        (
            background: $background-color,
        )
    );
    $background-palette: map-merge(
        $background-palette,
        (
            raised-button: $background-color,
        )
    );

    // Merge the changes into a new theme.
    $modified-theme-color: map-merge(
        $theme-color,
        (
            background: $color-background-palette,
        )
    );
    $modified-theme: map-merge(
        $theme,
        (
            color: $modified-theme-color,
        )
    );
    $modified-theme: map-merge(
        $modified-theme,
        (
            background: $background-palette,
        )
    );

    @return $modified-theme;
}

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$SatelliteTracker-primary: mat.define-palette(mat.$indigo-palette, 500, 300, 800);
$SatelliteTracker-accent: mat.define-palette(mat.$yellow-palette, 500, 200, 700);

// The warn palette is optional (defaults to red).
$SatelliteTracker-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$SatelliteTracker-theme: mat.define-light-theme(
    (
        color: (
            primary: $SatelliteTracker-primary,
            accent: $SatelliteTracker-accent,
            warn: $SatelliteTracker-warn,
        ),
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($SatelliteTracker-theme);

$SatelliteTracker-dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $SatelliteTracker-primary,
            accent: $SatelliteTracker-accent,
            warn: $SatelliteTracker-warn,
        ),
    )
);

.darkMode {
    @include mat.all-component-colors($SatelliteTracker-dark-theme);
    // @include mat.all-component-colors(modify-background($SatelliteTracker-dark-theme, #010409));
}

/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
}

.darkMode .mat-toolbar {
    background: #161b22;
}

table {
    margin-bottom: 20px;
    // width: 100%;
}

.component-container {
    padding: 20px;
}

button {
    font-size: 16px;
}

a {
    color: #8b99e4;
    text-decoration: none;
}

a:hover {
    color: #6d7bcf;
    text-decoration: none;
}

button:hover {
    opacity: 0.75;
}

.text-muted {
    color: #a2adb6;
}

.spacer {
    flex: 1 1 auto;
}

form .max-500 {
    min-width: 150px;
    max-width: 500px;
    width: 100%;
    margin: auto;
}

mat-form-field {
    width: 100%;
}

.cols-2 {
    display: flex;
    justify-content: space-between;
}

.cols-2 mat-form-field {
    width: 49%;
}

.cols-3 {
    display: flex;
    justify-content: space-between;
}

.cols-3 mat-form-field {
    width: 32%;
}

.buttons button {
    margin-inline: 5px;
}

tr .icon {
    text-align: end;
}

.smalltext {
    font-size: 9px;
}

table button {
    margin-inline: 5px;
}

app-root {
    display: flex;
    flex-direction: column;
    min-height: 100%;
}

// .mat-mdc-snack-bar-container.snackbar-error .mdc-snackbar__label {
//     color: white !important;
// }

.mdc-snackbar.snackbar-error div.mdc-snackbar__surface {
    background-color: #dfb1b1;
}

.mdc-snackbar.snackbar-success div.mdc-snackbar__surface {
    background-color: #a3cba3;
}

.mdc-snackbar.snackbar-info div.mdc-snackbar__surface {
    background-color: #b4b3d4;
}
